#!/usr/bin/perl -w
#
# BarricadeMX
# Copyright 2008, Fort Systems Ltd.
#

use strict;

# Prevent multiple copies of this script from running
use Fcntl ':flock';
open(SELF, "<", $0) or die "Can't open self: $!";
flock SELF, LOCK_EX | LOCK_NB or exit;

my($cfg_dir) = '/etc/smtpf';
my($make) = '/usr/bin/make';
my($wget) = '/usr/bin/wget';
my($phishing_url) = "https://aper.svn.sourceforge.net/svnroot/aper/phishing_reply_addresses";
my($phishing_file) = "$cfg_dir/phishing_reply_addresses";
my($phishing_output) = "$cfg_dir/access/anti-phishing-email-reply.cf";
my($debug) = 0;

if(-d "$cfg_dir/access") {
 # Introduce a random delay if up to an hour
 my($updatemaxdelay) = 3600;
 my($delay) = int(rand($updatemaxdelay));
 # No delay if any arguments are passed to allow for interactive runs
 if(not defined($ARGV[0])) {
  my($saved_ps) = $0;
  $0 .= ": sleeping $delay sec";
  print STDERR "Sleeping for $delay seconds.\n" if $debug;
  sleep $delay;
  $0 = $saved_ps;
 }

 if(download($phishing_url, $phishing_file)) {
  print STDERR "Update required.\n" if $debug;
  my $datetime = localtime;
  open(IN, "< $phishing_file") or die $!;
  open(OUT, "> $phishing_output") or die $!;
  print OUT "#\n# anti-phishing-email-reply.cf\n# Generated: $datetime\n# WARNING: this file is automatically generated; do not edit!\n#\n\n";
  while(<IN>) {
   next if /^(#|\s+|$)/;
   chomp;
   if(/,/) {
    my(@split) = split(',',$_);
    print OUT "# $_\n";
    print OUT "From:".$split[0]."\t\tREJECT:\"Phishing address rejected\"\n";
    print OUT "To:".$split[0]."\t\tREJECT:\"Phishing address rejected\"\n";
    print OUT "Body:".$split[0]."\t\tREJECT:\"Phishing address rejected\"\n\n";
   }

  }
  close(IN) or die $!;
  close(OUT) or die $!;
  system("$make -C$cfg_dir 2>&1 > /dev/null");
 } else {
  print STDERR "Update not required.\n" if $debug;
 }
}

sub download {
 my($remote_url,$local_file) = @_;
 die if (!$remote_url or !$local_file);

 my($pre_mtime) = ((stat $local_file)[9] or 0);
 system("$wget -q -N -O $local_file $remote_url");
 if($? == -1) {
  die "Command failed: $!\n";
 } else {
  if(($?>>8) != 0) {
   die "Command returned ".($?>>8)."\n";
  }
 }
 my($post_mtime) = (stat $local_file)[9];
 if($pre_mtime != $post_mtime) {
  # File updated
  return 1;
 }
 return 0;
}
